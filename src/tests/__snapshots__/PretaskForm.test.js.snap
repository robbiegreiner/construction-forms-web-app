// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PretaskForm tests should match snapshot test 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PretaskForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          PRETASK PERMIT
</h1>,
        <h3 />,
        <p>
          Required fields are followed by 
          <abbr
                    title="required"
          >
                    *
          </abbr>
</p>,
        <section
          className="general-info"
>
          <label
                    htmlFor="project-id"
          >
                    Project ID: 
                    <abbr
                              title="required"
                    >
                              *
                    </abbr>
                    <input
                              onChange={[Function]}
                              placeholder="project id"
                              type="text"
                    />
          </label>
          <label
                    htmlFor="employeename"
          >
                    Name: 
                    <abbr
                              title="required"
                    >
                              *
                    </abbr>
                    <input
                              onChange={[Function]}
                              placeholder="Employee Name"
                              type="text"
                    />
          </label>
          <label
                    htmlFor="email"
          >
                    Email: 
                    <abbr
                              title="required"
                    >
                              *
                    </abbr>
                    <input
                              onChange={[Function]}
                              placeholder="Email"
                              type="text"
                    />
          </label>
          <label
                    htmlFor="company"
          >
                    Company: 
                    <abbr
                              title="required"
                    >
                              *
                    </abbr>
                    <input
                              onChange={[Function]}
                              placeholder="Company"
                              type="text"
                    />
          </label>
          <label
                    htmlFor="date"
          >
                    Date: 
                    <abbr
                              title="required"
                    >
                              *
                    </abbr>
                    <input
                              onChange={[Function]}
                              type="date"
                    />
          </label>
</section>,
        <section
          className="string-info"
>
          <label
                    htmlFor="firewatch-req"
          >
                    Firewatch Requirement? 
                    <abbr
                              title="required"
                    >
                              *
                    </abbr>
                    <input
                              onChange={[Function]}
                              placeholder="Firewatch requirement?"
                              type="text"
                    />
          </label>
          <label
                    htmlFor="start-time"
          >
                    Start Time
                    <abbr
                              title="required"
                    >
                              *
                    </abbr>
                    <input
                              onChange={[Function]}
                              type="time"
                    />
          </label>
          <label
                    htmlFor="end-time"
          >
                    End Time
                    <abbr
                              title="required"
                    >
                              *
                    </abbr>
                    <input
                              onChange={[Function]}
                              type="time"
                    />
          </label>
</section>,
        <section
          className="bool-info"
>
          <label
                    htmlFor="area-inspected"
                    onChange={[Function]}
          >
                    Area Inspected? 
                    <abbr
                              title="required"
                    >
                              *
                    </abbr>
                    <br />
                    <input
                              name="inspected"
                              type="radio"
                              value="true"
                    />
                    Yes
                    <br />
                    <input
                              name="inspected"
                              type="radio"
                              value="false"
                    />
                    No
                    <br />
          </label>
          <label
                    htmlFor="fire-extinguesher"
                    onChange={[Function]}
          >
                    Fire Extinguisher? 
                    <abbr
                              title="required"
                    >
                              *
                    </abbr>
                    <br />
                    <input
                              name="extinguisher"
                              type="radio"
                              value="true"
                    />
                    Yes
                    <br />
                    <input
                              name="extinguisher"
                              type="radio"
                              value="false"
                    />
                    No
                    <br />
          </label>
          <label
                    htmlFor="flammables-removed"
                    onChange={[Function]}
          >
                    Flammables Removed? 
                    <abbr
                              title="required"
                    >
                              *
                    </abbr>
                    <br />
                    <input
                              name="flammables"
                              type="radio"
                              value="true"
                    />
                    Yes
                    <br />
                    <input
                              name="flammables"
                              type="radio"
                              value="false"
                    />
                    No
                    <br />
          </label>
          <label
                    htmlFor="smoke-detectors"
                    onChange={[Function]}
          >
                    Smoke Detectors Disabled? 
                    <abbr
                              title="required"
                    >
                              *
                    </abbr>
                    <br />
                    <input
                              name="smoke-detectors"
                              type="radio"
                              value="yes"
                    />
                    Yes
                    <br />
                    <input
                              name="smoke-detectors"
                              type="radio"
                              value="no"
                    />
                    No
                    <br />
          </label>
          <label
                    htmlFor="sprinkler-headers"
                    onChange={[Function]}
          >
                    Sprinkler Heads Protected? 
                    <abbr
                              title="required"
                    >
                              *
                    </abbr>
                    <br />
                    <input
                              name="sprinkler-heads"
                              type="radio"
                              value="yes"
                    />
                    Yes
                    <br />
                    <input
                              name="sprinkler-heads"
                              type="radio"
                              value="no"
                    />
                    No
                    <br />
          </label>
</section>,
        <section>
          <input
                    placeholder="Signature"
                    type="text"
          />
</section>,
        <button
          onClick={[Function]}
>
          Submit
</button>,
      ],
      "className": "hotwork-template",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "PRETASK PERMIT",
        },
        "ref": null,
        "rendered": "PRETASK PERMIT",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Required fields are followed by ",
            <abbr
              title="required"
>
              *
</abbr>,
          ],
        },
        "ref": null,
        "rendered": Array [
          "Required fields are followed by ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "*",
              "title": "required",
            },
            "ref": null,
            "rendered": "*",
            "type": "abbr",
          },
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor="project-id"
>
              Project ID: 
              <abbr
                            title="required"
              >
                            *
              </abbr>
              <input
                            onChange={[Function]}
                            placeholder="project id"
                            type="text"
              />
</label>,
            <label
              htmlFor="employeename"
>
              Name: 
              <abbr
                            title="required"
              >
                            *
              </abbr>
              <input
                            onChange={[Function]}
                            placeholder="Employee Name"
                            type="text"
              />
</label>,
            <label
              htmlFor="email"
>
              Email: 
              <abbr
                            title="required"
              >
                            *
              </abbr>
              <input
                            onChange={[Function]}
                            placeholder="Email"
                            type="text"
              />
</label>,
            <label
              htmlFor="company"
>
              Company: 
              <abbr
                            title="required"
              >
                            *
              </abbr>
              <input
                            onChange={[Function]}
                            placeholder="Company"
                            type="text"
              />
</label>,
            <label
              htmlFor="date"
>
              Date: 
              <abbr
                            title="required"
              >
                            *
              </abbr>
              <input
                            onChange={[Function]}
                            type="date"
              />
</label>,
          ],
          "className": "general-info",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Project ID: ",
                <abbr
                  title="required"
>
                  *
</abbr>,
                <input
                  onChange={[Function]}
                  placeholder="project id"
                  type="text"
/>,
              ],
              "htmlFor": "project-id",
            },
            "ref": null,
            "rendered": Array [
              "Project ID: ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "*",
                  "title": "required",
                },
                "ref": null,
                "rendered": "*",
                "type": "abbr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "project id",
                  "type": "text",
                },
                "ref": "project-id",
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Name: ",
                <abbr
                  title="required"
>
                  *
</abbr>,
                <input
                  onChange={[Function]}
                  placeholder="Employee Name"
                  type="text"
/>,
              ],
              "htmlFor": "employeename",
            },
            "ref": null,
            "rendered": Array [
              "Name: ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "*",
                  "title": "required",
                },
                "ref": null,
                "rendered": "*",
                "type": "abbr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "Employee Name",
                  "type": "text",
                },
                "ref": "employee_name",
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Email: ",
                <abbr
                  title="required"
>
                  *
</abbr>,
                <input
                  onChange={[Function]}
                  placeholder="Email"
                  type="text"
/>,
              ],
              "htmlFor": "email",
            },
            "ref": null,
            "rendered": Array [
              "Email: ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "*",
                  "title": "required",
                },
                "ref": null,
                "rendered": "*",
                "type": "abbr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "Email",
                  "type": "text",
                },
                "ref": "email",
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Company: ",
                <abbr
                  title="required"
>
                  *
</abbr>,
                <input
                  onChange={[Function]}
                  placeholder="Company"
                  type="text"
/>,
              ],
              "htmlFor": "company",
            },
            "ref": null,
            "rendered": Array [
              "Company: ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "*",
                  "title": "required",
                },
                "ref": null,
                "rendered": "*",
                "type": "abbr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "Company",
                  "type": "text",
                },
                "ref": "company",
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Date: ",
                <abbr
                  title="required"
>
                  *
</abbr>,
                <input
                  onChange={[Function]}
                  type="date"
/>,
              ],
              "htmlFor": "date",
            },
            "ref": null,
            "rendered": Array [
              "Date: ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "*",
                  "title": "required",
                },
                "ref": null,
                "rendered": "*",
                "type": "abbr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "type": "date",
                },
                "ref": "date",
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
        ],
        "type": "section",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor="firewatch-req"
>
              Firewatch Requirement? 
              <abbr
                            title="required"
              >
                            *
              </abbr>
              <input
                            onChange={[Function]}
                            placeholder="Firewatch requirement?"
                            type="text"
              />
</label>,
            <label
              htmlFor="start-time"
>
              Start Time
              <abbr
                            title="required"
              >
                            *
              </abbr>
              <input
                            onChange={[Function]}
                            type="time"
              />
</label>,
            <label
              htmlFor="end-time"
>
              End Time
              <abbr
                            title="required"
              >
                            *
              </abbr>
              <input
                            onChange={[Function]}
                            type="time"
              />
</label>,
          ],
          "className": "string-info",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Firewatch Requirement? ",
                <abbr
                  title="required"
>
                  *
</abbr>,
                <input
                  onChange={[Function]}
                  placeholder="Firewatch requirement?"
                  type="text"
/>,
              ],
              "htmlFor": "firewatch-req",
            },
            "ref": null,
            "rendered": Array [
              "Firewatch Requirement? ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "*",
                  "title": "required",
                },
                "ref": null,
                "rendered": "*",
                "type": "abbr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "Firewatch requirement?",
                  "type": "text",
                },
                "ref": "firewatchRequirement",
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Start Time",
                <abbr
                  title="required"
>
                  *
</abbr>,
                <input
                  onChange={[Function]}
                  type="time"
/>,
              ],
              "htmlFor": "start-time",
            },
            "ref": null,
            "rendered": Array [
              "Start Time",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "*",
                  "title": "required",
                },
                "ref": null,
                "rendered": "*",
                "type": "abbr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "type": "time",
                },
                "ref": "timeStart",
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "End Time",
                <abbr
                  title="required"
>
                  *
</abbr>,
                <input
                  onChange={[Function]}
                  type="time"
/>,
              ],
              "htmlFor": "end-time",
            },
            "ref": null,
            "rendered": Array [
              "End Time",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "*",
                  "title": "required",
                },
                "ref": null,
                "rendered": "*",
                "type": "abbr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "type": "time",
                },
                "ref": "finishTime",
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
        ],
        "type": "section",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor="area-inspected"
              onChange={[Function]}
>
              Area Inspected? 
              <abbr
                            title="required"
              >
                            *
              </abbr>
              <br />
              <input
                            name="inspected"
                            type="radio"
                            value="true"
              />
              Yes
              <br />
              <input
                            name="inspected"
                            type="radio"
                            value="false"
              />
              No
              <br />
</label>,
            <label
              htmlFor="fire-extinguesher"
              onChange={[Function]}
>
              Fire Extinguisher? 
              <abbr
                            title="required"
              >
                            *
              </abbr>
              <br />
              <input
                            name="extinguisher"
                            type="radio"
                            value="true"
              />
              Yes
              <br />
              <input
                            name="extinguisher"
                            type="radio"
                            value="false"
              />
              No
              <br />
</label>,
            <label
              htmlFor="flammables-removed"
              onChange={[Function]}
>
              Flammables Removed? 
              <abbr
                            title="required"
              >
                            *
              </abbr>
              <br />
              <input
                            name="flammables"
                            type="radio"
                            value="true"
              />
              Yes
              <br />
              <input
                            name="flammables"
                            type="radio"
                            value="false"
              />
              No
              <br />
</label>,
            <label
              htmlFor="smoke-detectors"
              onChange={[Function]}
>
              Smoke Detectors Disabled? 
              <abbr
                            title="required"
              >
                            *
              </abbr>
              <br />
              <input
                            name="smoke-detectors"
                            type="radio"
                            value="yes"
              />
              Yes
              <br />
              <input
                            name="smoke-detectors"
                            type="radio"
                            value="no"
              />
              No
              <br />
</label>,
            <label
              htmlFor="sprinkler-headers"
              onChange={[Function]}
>
              Sprinkler Heads Protected? 
              <abbr
                            title="required"
              >
                            *
              </abbr>
              <br />
              <input
                            name="sprinkler-heads"
                            type="radio"
                            value="yes"
              />
              Yes
              <br />
              <input
                            name="sprinkler-heads"
                            type="radio"
                            value="no"
              />
              No
              <br />
</label>,
          ],
          "className": "bool-info",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Area Inspected? ",
                <abbr
                  title="required"
>
                  *
</abbr>,
                <br />,
                <input
                  name="inspected"
                  type="radio"
                  value="true"
/>,
                "Yes",
                <br />,
                <input
                  name="inspected"
                  type="radio"
                  value="false"
/>,
                "No",
                <br />,
              ],
              "htmlFor": "area-inspected",
              "onChange": [Function],
            },
            "ref": null,
            "rendered": Array [
              "Area Inspected? ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "*",
                  "title": "required",
                },
                "ref": null,
                "rendered": "*",
                "type": "abbr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "inspected",
                  "type": "radio",
                  "value": "true",
                },
                "ref": "areaInspected",
                "rendered": null,
                "type": "input",
              },
              "Yes",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "inspected",
                  "type": "radio",
                  "value": "false",
                },
                "ref": "areaInspected",
                "rendered": null,
                "type": "input",
              },
              "No",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Fire Extinguisher? ",
                <abbr
                  title="required"
>
                  *
</abbr>,
                <br />,
                <input
                  name="extinguisher"
                  type="radio"
                  value="true"
/>,
                "Yes",
                <br />,
                <input
                  name="extinguisher"
                  type="radio"
                  value="false"
/>,
                "No",
                <br />,
              ],
              "htmlFor": "fire-extinguesher",
              "onChange": [Function],
            },
            "ref": "fireExtinguisher",
            "rendered": Array [
              "Fire Extinguisher? ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "*",
                  "title": "required",
                },
                "ref": null,
                "rendered": "*",
                "type": "abbr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "extinguisher",
                  "type": "radio",
                  "value": "true",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "Yes",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "extinguisher",
                  "type": "radio",
                  "value": "false",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "No",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Flammables Removed? ",
                <abbr
                  title="required"
>
                  *
</abbr>,
                <br />,
                <input
                  name="flammables"
                  type="radio"
                  value="true"
/>,
                "Yes",
                <br />,
                <input
                  name="flammables"
                  type="radio"
                  value="false"
/>,
                "No",
                <br />,
              ],
              "htmlFor": "flammables-removed",
              "onChange": [Function],
            },
            "ref": "flammablesRemoved",
            "rendered": Array [
              "Flammables Removed? ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "*",
                  "title": "required",
                },
                "ref": null,
                "rendered": "*",
                "type": "abbr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "flammables",
                  "type": "radio",
                  "value": "true",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "Yes",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "flammables",
                  "type": "radio",
                  "value": "false",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "No",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Smoke Detectors Disabled? ",
                <abbr
                  title="required"
>
                  *
</abbr>,
                <br />,
                <input
                  name="smoke-detectors"
                  type="radio"
                  value="yes"
/>,
                "Yes",
                <br />,
                <input
                  name="smoke-detectors"
                  type="radio"
                  value="no"
/>,
                "No",
                <br />,
              ],
              "htmlFor": "smoke-detectors",
              "onChange": [Function],
            },
            "ref": "smokeDetectorsDisabled",
            "rendered": Array [
              "Smoke Detectors Disabled? ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "*",
                  "title": "required",
                },
                "ref": null,
                "rendered": "*",
                "type": "abbr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "smoke-detectors",
                  "type": "radio",
                  "value": "yes",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "Yes",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "smoke-detectors",
                  "type": "radio",
                  "value": "no",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "No",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Sprinkler Heads Protected? ",
                <abbr
                  title="required"
>
                  *
</abbr>,
                <br />,
                <input
                  name="sprinkler-heads"
                  type="radio"
                  value="yes"
/>,
                "Yes",
                <br />,
                <input
                  name="sprinkler-heads"
                  type="radio"
                  value="no"
/>,
                "No",
                <br />,
              ],
              "htmlFor": "sprinkler-headers",
              "onChange": [Function],
            },
            "ref": "sprinklerHeadsProtected",
            "rendered": Array [
              "Sprinkler Heads Protected? ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "*",
                  "title": "required",
                },
                "ref": null,
                "rendered": "*",
                "type": "abbr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "sprinkler-heads",
                  "type": "radio",
                  "value": "yes",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "Yes",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "sprinkler-heads",
                  "type": "radio",
                  "value": "no",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "No",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": "label",
          },
        ],
        "type": "section",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <input
            placeholder="Signature"
            type="text"
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "placeholder": "Signature",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "type": "section",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Submit",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Submit",
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            PRETASK PERMIT
</h1>,
          <h3 />,
          <p>
            Required fields are followed by 
            <abbr
                        title="required"
            >
                        *
            </abbr>
</p>,
          <section
            className="general-info"
>
            <label
                        htmlFor="project-id"
            >
                        Project ID: 
                        <abbr
                                    title="required"
                        >
                                    *
                        </abbr>
                        <input
                                    onChange={[Function]}
                                    placeholder="project id"
                                    type="text"
                        />
            </label>
            <label
                        htmlFor="employeename"
            >
                        Name: 
                        <abbr
                                    title="required"
                        >
                                    *
                        </abbr>
                        <input
                                    onChange={[Function]}
                                    placeholder="Employee Name"
                                    type="text"
                        />
            </label>
            <label
                        htmlFor="email"
            >
                        Email: 
                        <abbr
                                    title="required"
                        >
                                    *
                        </abbr>
                        <input
                                    onChange={[Function]}
                                    placeholder="Email"
                                    type="text"
                        />
            </label>
            <label
                        htmlFor="company"
            >
                        Company: 
                        <abbr
                                    title="required"
                        >
                                    *
                        </abbr>
                        <input
                                    onChange={[Function]}
                                    placeholder="Company"
                                    type="text"
                        />
            </label>
            <label
                        htmlFor="date"
            >
                        Date: 
                        <abbr
                                    title="required"
                        >
                                    *
                        </abbr>
                        <input
                                    onChange={[Function]}
                                    type="date"
                        />
            </label>
</section>,
          <section
            className="string-info"
>
            <label
                        htmlFor="firewatch-req"
            >
                        Firewatch Requirement? 
                        <abbr
                                    title="required"
                        >
                                    *
                        </abbr>
                        <input
                                    onChange={[Function]}
                                    placeholder="Firewatch requirement?"
                                    type="text"
                        />
            </label>
            <label
                        htmlFor="start-time"
            >
                        Start Time
                        <abbr
                                    title="required"
                        >
                                    *
                        </abbr>
                        <input
                                    onChange={[Function]}
                                    type="time"
                        />
            </label>
            <label
                        htmlFor="end-time"
            >
                        End Time
                        <abbr
                                    title="required"
                        >
                                    *
                        </abbr>
                        <input
                                    onChange={[Function]}
                                    type="time"
                        />
            </label>
</section>,
          <section
            className="bool-info"
>
            <label
                        htmlFor="area-inspected"
                        onChange={[Function]}
            >
                        Area Inspected? 
                        <abbr
                                    title="required"
                        >
                                    *
                        </abbr>
                        <br />
                        <input
                                    name="inspected"
                                    type="radio"
                                    value="true"
                        />
                        Yes
                        <br />
                        <input
                                    name="inspected"
                                    type="radio"
                                    value="false"
                        />
                        No
                        <br />
            </label>
            <label
                        htmlFor="fire-extinguesher"
                        onChange={[Function]}
            >
                        Fire Extinguisher? 
                        <abbr
                                    title="required"
                        >
                                    *
                        </abbr>
                        <br />
                        <input
                                    name="extinguisher"
                                    type="radio"
                                    value="true"
                        />
                        Yes
                        <br />
                        <input
                                    name="extinguisher"
                                    type="radio"
                                    value="false"
                        />
                        No
                        <br />
            </label>
            <label
                        htmlFor="flammables-removed"
                        onChange={[Function]}
            >
                        Flammables Removed? 
                        <abbr
                                    title="required"
                        >
                                    *
                        </abbr>
                        <br />
                        <input
                                    name="flammables"
                                    type="radio"
                                    value="true"
                        />
                        Yes
                        <br />
                        <input
                                    name="flammables"
                                    type="radio"
                                    value="false"
                        />
                        No
                        <br />
            </label>
            <label
                        htmlFor="smoke-detectors"
                        onChange={[Function]}
            >
                        Smoke Detectors Disabled? 
                        <abbr
                                    title="required"
                        >
                                    *
                        </abbr>
                        <br />
                        <input
                                    name="smoke-detectors"
                                    type="radio"
                                    value="yes"
                        />
                        Yes
                        <br />
                        <input
                                    name="smoke-detectors"
                                    type="radio"
                                    value="no"
                        />
                        No
                        <br />
            </label>
            <label
                        htmlFor="sprinkler-headers"
                        onChange={[Function]}
            >
                        Sprinkler Heads Protected? 
                        <abbr
                                    title="required"
                        >
                                    *
                        </abbr>
                        <br />
                        <input
                                    name="sprinkler-heads"
                                    type="radio"
                                    value="yes"
                        />
                        Yes
                        <br />
                        <input
                                    name="sprinkler-heads"
                                    type="radio"
                                    value="no"
                        />
                        No
                        <br />
            </label>
</section>,
          <section>
            <input
                        placeholder="Signature"
                        type="text"
            />
</section>,
          <button
            onClick={[Function]}
>
            Submit
</button>,
        ],
        "className": "hotwork-template",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "PRETASK PERMIT",
          },
          "ref": null,
          "rendered": "PRETASK PERMIT",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Required fields are followed by ",
              <abbr
                title="required"
>
                *
</abbr>,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Required fields are followed by ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "*",
                "title": "required",
              },
              "ref": null,
              "rendered": "*",
              "type": "abbr",
            },
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor="project-id"
>
                Project ID: 
                <abbr
                                title="required"
                >
                                *
                </abbr>
                <input
                                onChange={[Function]}
                                placeholder="project id"
                                type="text"
                />
</label>,
              <label
                htmlFor="employeename"
>
                Name: 
                <abbr
                                title="required"
                >
                                *
                </abbr>
                <input
                                onChange={[Function]}
                                placeholder="Employee Name"
                                type="text"
                />
</label>,
              <label
                htmlFor="email"
>
                Email: 
                <abbr
                                title="required"
                >
                                *
                </abbr>
                <input
                                onChange={[Function]}
                                placeholder="Email"
                                type="text"
                />
</label>,
              <label
                htmlFor="company"
>
                Company: 
                <abbr
                                title="required"
                >
                                *
                </abbr>
                <input
                                onChange={[Function]}
                                placeholder="Company"
                                type="text"
                />
</label>,
              <label
                htmlFor="date"
>
                Date: 
                <abbr
                                title="required"
                >
                                *
                </abbr>
                <input
                                onChange={[Function]}
                                type="date"
                />
</label>,
            ],
            "className": "general-info",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Project ID: ",
                  <abbr
                    title="required"
>
                    *
</abbr>,
                  <input
                    onChange={[Function]}
                    placeholder="project id"
                    type="text"
/>,
                ],
                "htmlFor": "project-id",
              },
              "ref": null,
              "rendered": Array [
                "Project ID: ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "*",
                    "title": "required",
                  },
                  "ref": null,
                  "rendered": "*",
                  "type": "abbr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "onChange": [Function],
                    "placeholder": "project id",
                    "type": "text",
                  },
                  "ref": "project-id",
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Name: ",
                  <abbr
                    title="required"
>
                    *
</abbr>,
                  <input
                    onChange={[Function]}
                    placeholder="Employee Name"
                    type="text"
/>,
                ],
                "htmlFor": "employeename",
              },
              "ref": null,
              "rendered": Array [
                "Name: ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "*",
                    "title": "required",
                  },
                  "ref": null,
                  "rendered": "*",
                  "type": "abbr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "onChange": [Function],
                    "placeholder": "Employee Name",
                    "type": "text",
                  },
                  "ref": "employee_name",
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Email: ",
                  <abbr
                    title="required"
>
                    *
</abbr>,
                  <input
                    onChange={[Function]}
                    placeholder="Email"
                    type="text"
/>,
                ],
                "htmlFor": "email",
              },
              "ref": null,
              "rendered": Array [
                "Email: ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "*",
                    "title": "required",
                  },
                  "ref": null,
                  "rendered": "*",
                  "type": "abbr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "onChange": [Function],
                    "placeholder": "Email",
                    "type": "text",
                  },
                  "ref": "email",
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Company: ",
                  <abbr
                    title="required"
>
                    *
</abbr>,
                  <input
                    onChange={[Function]}
                    placeholder="Company"
                    type="text"
/>,
                ],
                "htmlFor": "company",
              },
              "ref": null,
              "rendered": Array [
                "Company: ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "*",
                    "title": "required",
                  },
                  "ref": null,
                  "rendered": "*",
                  "type": "abbr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "onChange": [Function],
                    "placeholder": "Company",
                    "type": "text",
                  },
                  "ref": "company",
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Date: ",
                  <abbr
                    title="required"
>
                    *
</abbr>,
                  <input
                    onChange={[Function]}
                    type="date"
/>,
                ],
                "htmlFor": "date",
              },
              "ref": null,
              "rendered": Array [
                "Date: ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "*",
                    "title": "required",
                  },
                  "ref": null,
                  "rendered": "*",
                  "type": "abbr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "onChange": [Function],
                    "type": "date",
                  },
                  "ref": "date",
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
          ],
          "type": "section",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor="firewatch-req"
>
                Firewatch Requirement? 
                <abbr
                                title="required"
                >
                                *
                </abbr>
                <input
                                onChange={[Function]}
                                placeholder="Firewatch requirement?"
                                type="text"
                />
</label>,
              <label
                htmlFor="start-time"
>
                Start Time
                <abbr
                                title="required"
                >
                                *
                </abbr>
                <input
                                onChange={[Function]}
                                type="time"
                />
</label>,
              <label
                htmlFor="end-time"
>
                End Time
                <abbr
                                title="required"
                >
                                *
                </abbr>
                <input
                                onChange={[Function]}
                                type="time"
                />
</label>,
            ],
            "className": "string-info",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Firewatch Requirement? ",
                  <abbr
                    title="required"
>
                    *
</abbr>,
                  <input
                    onChange={[Function]}
                    placeholder="Firewatch requirement?"
                    type="text"
/>,
                ],
                "htmlFor": "firewatch-req",
              },
              "ref": null,
              "rendered": Array [
                "Firewatch Requirement? ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "*",
                    "title": "required",
                  },
                  "ref": null,
                  "rendered": "*",
                  "type": "abbr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "onChange": [Function],
                    "placeholder": "Firewatch requirement?",
                    "type": "text",
                  },
                  "ref": "firewatchRequirement",
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Start Time",
                  <abbr
                    title="required"
>
                    *
</abbr>,
                  <input
                    onChange={[Function]}
                    type="time"
/>,
                ],
                "htmlFor": "start-time",
              },
              "ref": null,
              "rendered": Array [
                "Start Time",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "*",
                    "title": "required",
                  },
                  "ref": null,
                  "rendered": "*",
                  "type": "abbr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "onChange": [Function],
                    "type": "time",
                  },
                  "ref": "timeStart",
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "End Time",
                  <abbr
                    title="required"
>
                    *
</abbr>,
                  <input
                    onChange={[Function]}
                    type="time"
/>,
                ],
                "htmlFor": "end-time",
              },
              "ref": null,
              "rendered": Array [
                "End Time",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "*",
                    "title": "required",
                  },
                  "ref": null,
                  "rendered": "*",
                  "type": "abbr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "onChange": [Function],
                    "type": "time",
                  },
                  "ref": "finishTime",
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
          ],
          "type": "section",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor="area-inspected"
                onChange={[Function]}
>
                Area Inspected? 
                <abbr
                                title="required"
                >
                                *
                </abbr>
                <br />
                <input
                                name="inspected"
                                type="radio"
                                value="true"
                />
                Yes
                <br />
                <input
                                name="inspected"
                                type="radio"
                                value="false"
                />
                No
                <br />
</label>,
              <label
                htmlFor="fire-extinguesher"
                onChange={[Function]}
>
                Fire Extinguisher? 
                <abbr
                                title="required"
                >
                                *
                </abbr>
                <br />
                <input
                                name="extinguisher"
                                type="radio"
                                value="true"
                />
                Yes
                <br />
                <input
                                name="extinguisher"
                                type="radio"
                                value="false"
                />
                No
                <br />
</label>,
              <label
                htmlFor="flammables-removed"
                onChange={[Function]}
>
                Flammables Removed? 
                <abbr
                                title="required"
                >
                                *
                </abbr>
                <br />
                <input
                                name="flammables"
                                type="radio"
                                value="true"
                />
                Yes
                <br />
                <input
                                name="flammables"
                                type="radio"
                                value="false"
                />
                No
                <br />
</label>,
              <label
                htmlFor="smoke-detectors"
                onChange={[Function]}
>
                Smoke Detectors Disabled? 
                <abbr
                                title="required"
                >
                                *
                </abbr>
                <br />
                <input
                                name="smoke-detectors"
                                type="radio"
                                value="yes"
                />
                Yes
                <br />
                <input
                                name="smoke-detectors"
                                type="radio"
                                value="no"
                />
                No
                <br />
</label>,
              <label
                htmlFor="sprinkler-headers"
                onChange={[Function]}
>
                Sprinkler Heads Protected? 
                <abbr
                                title="required"
                >
                                *
                </abbr>
                <br />
                <input
                                name="sprinkler-heads"
                                type="radio"
                                value="yes"
                />
                Yes
                <br />
                <input
                                name="sprinkler-heads"
                                type="radio"
                                value="no"
                />
                No
                <br />
</label>,
            ],
            "className": "bool-info",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Area Inspected? ",
                  <abbr
                    title="required"
>
                    *
</abbr>,
                  <br />,
                  <input
                    name="inspected"
                    type="radio"
                    value="true"
/>,
                  "Yes",
                  <br />,
                  <input
                    name="inspected"
                    type="radio"
                    value="false"
/>,
                  "No",
                  <br />,
                ],
                "htmlFor": "area-inspected",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": Array [
                "Area Inspected? ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "*",
                    "title": "required",
                  },
                  "ref": null,
                  "rendered": "*",
                  "type": "abbr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "inspected",
                    "type": "radio",
                    "value": "true",
                  },
                  "ref": "areaInspected",
                  "rendered": null,
                  "type": "input",
                },
                "Yes",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "inspected",
                    "type": "radio",
                    "value": "false",
                  },
                  "ref": "areaInspected",
                  "rendered": null,
                  "type": "input",
                },
                "No",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Fire Extinguisher? ",
                  <abbr
                    title="required"
>
                    *
</abbr>,
                  <br />,
                  <input
                    name="extinguisher"
                    type="radio"
                    value="true"
/>,
                  "Yes",
                  <br />,
                  <input
                    name="extinguisher"
                    type="radio"
                    value="false"
/>,
                  "No",
                  <br />,
                ],
                "htmlFor": "fire-extinguesher",
                "onChange": [Function],
              },
              "ref": "fireExtinguisher",
              "rendered": Array [
                "Fire Extinguisher? ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "*",
                    "title": "required",
                  },
                  "ref": null,
                  "rendered": "*",
                  "type": "abbr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "extinguisher",
                    "type": "radio",
                    "value": "true",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "Yes",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "extinguisher",
                    "type": "radio",
                    "value": "false",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "No",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Flammables Removed? ",
                  <abbr
                    title="required"
>
                    *
</abbr>,
                  <br />,
                  <input
                    name="flammables"
                    type="radio"
                    value="true"
/>,
                  "Yes",
                  <br />,
                  <input
                    name="flammables"
                    type="radio"
                    value="false"
/>,
                  "No",
                  <br />,
                ],
                "htmlFor": "flammables-removed",
                "onChange": [Function],
              },
              "ref": "flammablesRemoved",
              "rendered": Array [
                "Flammables Removed? ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "*",
                    "title": "required",
                  },
                  "ref": null,
                  "rendered": "*",
                  "type": "abbr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "flammables",
                    "type": "radio",
                    "value": "true",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "Yes",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "flammables",
                    "type": "radio",
                    "value": "false",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "No",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Smoke Detectors Disabled? ",
                  <abbr
                    title="required"
>
                    *
</abbr>,
                  <br />,
                  <input
                    name="smoke-detectors"
                    type="radio"
                    value="yes"
/>,
                  "Yes",
                  <br />,
                  <input
                    name="smoke-detectors"
                    type="radio"
                    value="no"
/>,
                  "No",
                  <br />,
                ],
                "htmlFor": "smoke-detectors",
                "onChange": [Function],
              },
              "ref": "smokeDetectorsDisabled",
              "rendered": Array [
                "Smoke Detectors Disabled? ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "*",
                    "title": "required",
                  },
                  "ref": null,
                  "rendered": "*",
                  "type": "abbr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "smoke-detectors",
                    "type": "radio",
                    "value": "yes",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "Yes",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "smoke-detectors",
                    "type": "radio",
                    "value": "no",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "No",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Sprinkler Heads Protected? ",
                  <abbr
                    title="required"
>
                    *
</abbr>,
                  <br />,
                  <input
                    name="sprinkler-heads"
                    type="radio"
                    value="yes"
/>,
                  "Yes",
                  <br />,
                  <input
                    name="sprinkler-heads"
                    type="radio"
                    value="no"
/>,
                  "No",
                  <br />,
                ],
                "htmlFor": "sprinkler-headers",
                "onChange": [Function],
              },
              "ref": "sprinklerHeadsProtected",
              "rendered": Array [
                "Sprinkler Heads Protected? ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "*",
                    "title": "required",
                  },
                  "ref": null,
                  "rendered": "*",
                  "type": "abbr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "sprinkler-heads",
                    "type": "radio",
                    "value": "yes",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "Yes",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "sprinkler-heads",
                    "type": "radio",
                    "value": "no",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "No",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
              ],
              "type": "label",
            },
          ],
          "type": "section",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              placeholder="Signature"
              type="text"
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "placeholder": "Signature",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "section",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Submit",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Submit",
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
